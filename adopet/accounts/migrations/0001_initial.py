# Generated by Django 4.1.7 on 2023-04-21 00:54

from django.db import migrations, models

import adopet.accounts.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Creation Date and Time")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="Modificatioin Date and Time")),
                ("name", models.CharField(max_length=120, verbose_name="Nome completo")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="Email")),
                ("is_staff", models.BooleanField(default=False, verbose_name="staff status")),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[("T", "Tutor"), ("S", "Abrigo")],
                        max_length=1,
                        null=True,
                        verbose_name="Cargos",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text=(
                            "The groups this user belongs to. "
                            "A user will get all permissions granted to each of their groups."
                        ),
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ("-created_at",),
                "abstract": False,
            },
            managers=[
                ("objects", adopet.accounts.managers.UserManager()),
            ],
        ),
    ]
